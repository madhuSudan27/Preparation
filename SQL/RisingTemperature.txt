Table: Weather

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| id            | int     |
| recordDate    | date    |
| temperature   | int     |
+---------------+---------+
id is the column with unique values for this table.
This table contains information about the temperature on a certain day.
 

Write a solution to find all dates' Id with higher temperatures compared to its previous dates (yesterday).

Return the result table in any order.

The result format is in the following example.

 

Example 1:

Input: 
Weather table:
+----+------------+-------------+
| id | recordDate | temperature |
+----+------------+-------------+
| 1  | 2015-01-01 | 10          |
| 2  | 2015-01-02 | 25          |
| 3  | 2015-01-03 | 20          |
| 4  | 2015-01-04 | 30          |
+----+------------+-------------+
Output: 
+----+
| id |
+----+
| 2  |
| 4  |
+----+
Explanation: 
In 2015-01-02, the temperature was higher than the previous day (10 -> 25).
In 2015-01-04, the temperature was higher than the previous day (20 -> 30).



QUERY :-
# Write your MySQL query statement below

SELECT WEATHER.ID AS 'ID' FROM WEATHER  JOIN 
                WEATHER W ON DATEDIFF(WEATHER.RECORDDATE, W.RECORDDATE)=1 AND 
                WEATHER.TEMPERATURE> W.TEMPERATURE


SELECT W1.ID FROM WEATHER AS W1, WEATHER AS W2 WHERE W1.TEMPERATURE>W2.TEMPERATURE 
AND 
DATEDIFF(W1.RECORDDATE,W2.RECORDDATE)=1
